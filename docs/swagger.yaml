definitions:
  dto.LoginDto:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.MovieDto:
    properties:
      budget:
        type: number
      duration:
        type: integer
      genres:
        items:
          type: string
        type: array
      id:
        type: string
      image:
        type: string
      overview:
        type: string
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
  dto.RegisterDto:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  v1.response:
    properties:
      error: {}
      result: {}
      timestamp:
        type: string
    type: object
info:
  contact: {}
  description: REST-API for movies CRUD with clean architecture
  title: Clean architecture - Movify
  version: 1.0.0
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: user log in
      parameters:
      - description: log in info body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Log In
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: user registration
      parameters:
      - description: register info body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Registration
      tags:
      - auth
  /api/v1/movies:
    get:
      consumes:
      - application/json
      description: get all movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get All Movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: create new movie
      parameters:
      - description: movie body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.MovieDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Create New Movie
      tags:
      - movies
  /api/v1/movies/{id}:
    delete:
      consumes:
      - application/json
      description: delete movie by id
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Delete Movie
      tags:
      - movies
    get:
      consumes:
      - application/json
      description: get movie by id
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get Movie By ID
      tags:
      - movies
    patch:
      consumes:
      - application/json
      description: update movie
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      - description: movie update body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.MovieDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Update Movie
      tags:
      - movies
swagger: "2.0"
